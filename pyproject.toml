[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "semaphoreui-client"
dynamic = ["version"]
description = 'An api client for interacting with Semaphore UI'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "Paul Hummer", email = "paul@eventuallyanyway.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "dataclasses-json>=0.6.7",
  "requests>=2.32.3",
]

[project.urls]
Documentation = "https://github.com/rockstar/semaphoreui-client#readme"
Issues = "https://github.com/rockstar/semaphoreui-client/issues"
Source = "https://github.com/rockstar/semaphoreui-client"

[tool.hatch.version]
path = "semaphoreui_client/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:semaphoreui_client}"

[tool.hatch.envs.lint]
extra-dependencies = [
  "ruff",
]

[tool.hatch.envs.lint.scripts]
format = "ruff format semaphoreui_client/"
check-format = "ruff format --check semaphoreui_client/"
diff-format = "ruff format --diff semaphoreui_client/"
lint = "ruff check semaphoreui_client/"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12", "3.11", "3.9"]

[tool.coverage.run]
source_pkgs = ["semaphoreui_client", "tests"]
branch = true
parallel = true
omit = [
  "src/semaphoreui_client/__about__.py",
]

[tool.coverage.paths]
semaphoreui_client = ["semaphoreui_client", "*/semaphoreui-client/semaphoreui_client"]
tests = ["tests", "*/semaphoreui-client/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
strict = true